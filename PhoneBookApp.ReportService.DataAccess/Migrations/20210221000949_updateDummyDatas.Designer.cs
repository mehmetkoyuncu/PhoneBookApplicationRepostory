// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PhoneBookApp.ReportService.DataAccess.Context.EntityFramework;

namespace PhoneBookApp.ReportService.DataAccess.Migrations
{
    [DbContext(typeof(PhoneBookAppReportContextEF))]
    [Migration("20210221000949_updateDummyDatas")]
    partial class updateDummyDatas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PhoneBookApp.ReportService.DataAccess.Entities.LocationReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreaatedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DemandTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<int>("PersonCount")
                        .HasColumnType("integer");

                    b.Property<int>("PhoneCount")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8d1c8d1-560a-415f-b41f-ba4385b57dad"),
                            CreaatedTime = new DateTime(2021, 2, 21, 3, 9, 48, 299, DateTimeKind.Local).AddTicks(7713),
                            DemandTime = new DateTime(2021, 2, 21, 3, 9, 48, 301, DateTimeKind.Local).AddTicks(6463),
                            IsDeleted = false,
                            Location = "Istanbul",
                            PersonCount = 5,
                            PhoneCount = 10,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ca0a304b-d0e0-4875-b9cc-501bb36f6063"),
                            CreaatedTime = new DateTime(2021, 2, 21, 3, 9, 48, 301, DateTimeKind.Local).AddTicks(8431),
                            DemandTime = new DateTime(2021, 2, 21, 3, 9, 48, 301, DateTimeKind.Local).AddTicks(8452),
                            IsDeleted = true,
                            Location = "Rize",
                            PersonCount = 3,
                            PhoneCount = 20,
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("d6d14f22-a678-4c34-bb31-ad4985a64de5"),
                            CreaatedTime = new DateTime(2021, 2, 21, 3, 9, 48, 301, DateTimeKind.Local).AddTicks(8497),
                            DemandTime = new DateTime(2021, 2, 21, 3, 9, 48, 301, DateTimeKind.Local).AddTicks(8501),
                            IsDeleted = true,
                            Location = "Antalya",
                            PersonCount = 25,
                            PhoneCount = 50,
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("f55921b7-c4c3-4a15-ac34-9666cb2446dc"),
                            CreaatedTime = new DateTime(2021, 2, 21, 3, 9, 48, 301, DateTimeKind.Local).AddTicks(8508),
                            DemandTime = new DateTime(2021, 2, 21, 3, 9, 48, 301, DateTimeKind.Local).AddTicks(8509),
                            IsDeleted = false,
                            Location = "Eskişehir",
                            PersonCount = 35,
                            PhoneCount = 150,
                            Status = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
